//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

import 'package:dart_library_generator/utilities.dart';
import 'package:decimal/decimal.dart';
import 'package:json_annotation/json_annotation.dart';
import 'package:larc_api_dart/model.dart';
import 'package:larc_api_dart/src/utils/base_json_serializable.dart';

part 'summoner.g.dart';

/// Represents a player in the «League of Legends»
/// as an ally or opponent in the champ select phase
@JsonSerializable()
class Summoner implements BaseJsonSerializable<Summoner> {
  Summoner(this.assignedRole, this.pickedChampionId, this.bannedChampionId, this.pickCompleted, this.banCompleted, this.skinId,
      [this.actionInProgressType]);

  @override
  factory Summoner.fromJson(Map<String, dynamic> json) => _$SummonerFromJson(json);

  /// Role that this summoner has been assigned after matchmaking.
  @JsonKey(name: "assignedRole")
  Role assignedRole;

  /// ID of the champion this summoner picked.
  @JsonKey(name: "pickedChampionId")
  int pickedChampionId;

  /// ID of the champion this summoner banned.
  @JsonKey(name: "bannedChampionId")
  int bannedChampionId;

  /// Whether summoner actually picked a champion or only hovered it.
  @JsonKey(name: "pickCompleted")
  bool pickCompleted;

  /// Whether summoner actually banned a champion or only hovered it.
  @JsonKey(name: "banCompleted")
  bool banCompleted;

  /// ID of the skin of a picked champion.
  @JsonKey(name: "skinId")
  int skinId;

  /// Specifies type of action the summoner participates in.
  @JsonKey(name: "actionInProgressType")
  ActionType? actionInProgressType;

  @override
  Map<String, dynamic> toJson() => _$SummonerToJson(this);
}
