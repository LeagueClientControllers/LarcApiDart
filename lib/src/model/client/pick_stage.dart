//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

import 'package:dart_library_generator/utilities.dart';
import 'package:decimal/decimal.dart';
import 'package:json_annotation/json_annotation.dart';
import 'package:larc_api_dart/model.dart';
import 'package:larc_api_dart/src/utils/base_json_serializable.dart';

part 'pick_stage.g.dart';

/// Represents select phase in league client
/// with the data about teams, summoners, champions, bans etc.
@JsonSerializable()
class PickStage implements BaseJsonSerializable<PickStage> {
  PickStage(this.userPosition, this.allies, this.enemies,
      [this.banRequested,
      this.pickRequested,
      this.prepareStageStarted,
      this.actionType,
      this.isActorAnAlly,
      this.firstActorPosition,
      this.actorsCount]);

  @override
  factory PickStage.fromJson(Map<String, dynamic> json) => _$PickStageFromJson(json);

  /// Index of the allies array that corresponds to the user.
  @JsonKey(name: "userPosition")
  int userPosition;

  /// Time when ban phase was started.
  @JsonKey(name: "banRequested", fromJson: unixTimestampToDateTimeNullable, toJson: dateTimeToUnixTimestampNullable)
  DateTime? banRequested;

  /// Time when pick phase was started.
  @JsonKey(name: "pickRequested", fromJson: unixTimestampToDateTimeNullable, toJson: dateTimeToUnixTimestampNullable)
  DateTime? pickRequested;

  /// Time when prepare phase was started.
  @JsonKey(name: "prepareStageStarted", fromJson: unixTimestampToDateTimeNullable, toJson: dateTimeToUnixTimestampNullable)
  DateTime? prepareStageStarted;

  /// Type of the current action.
  @JsonKey(name: "actionType")
  ActionType? actionType;

  /// Is current action prescribed for the user's ally.
  @JsonKey(name: "isActorAnAlly")
  bool? isActorAnAlly;

  /// Index of the allies or opponents array that points
  /// to the first summoner that participate in the current action.
  @JsonKey(name: "firstActorPosition")
  int? firstActorPosition;

  /// Number of participants of the current action.
  @JsonKey(name: "actorsCount")
  int? actorsCount;

  /// Members of the user's team.
  /// Index in the array points to player position in the pick order.
  @JsonKey(name: "allies")
  List<Summoner> allies;

  /// Members of an opposing team.
  /// Index in the array points to player position in the pick order.
  @JsonKey(name: "enemies")
  List<Summoner> enemies;

  @override
  Map<String, dynamic> toJson() => _$PickStageToJson(this);
}
